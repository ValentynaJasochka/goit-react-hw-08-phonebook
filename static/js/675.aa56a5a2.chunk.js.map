{"version":3,"file":"static/js/675.aa56a5a2.chunk.js","mappings":"0OAaMA,EAAaC,EAAAA,KAAaC,MAAM,CACpCC,KAAMF,EAAAA,KACHG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACZC,MAAON,EAAAA,KACJG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACZE,SAAUP,EAAAA,KACPG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,cA0Dd,UAvDqB,WACnB,IAAMG,GAAWC,EAAAA,EAAAA,MAOjB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,MAAM,SAASC,QAAQ,SAASC,UAAU,SAASC,IAAI,OAAMC,SAAA,EACjEC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,SAAU,GAAIC,MAAO,OAAOJ,SAAC,kBAGnCC,EAAAA,EAAAA,KAACI,EAAAA,GAAM,CACLC,cAAe,CAAEpB,KAAM,GAAII,MAAO,GAAIC,SAAU,IAChDgB,iBAAkBxB,EAClByB,SAbe,SAACC,EAAQC,GAC5BlB,GAASmB,EAAAA,EAAAA,IAASF,IAClBC,EAAQE,WACV,EAU6BZ,UAEvBN,EAAAA,EAAAA,MAACmB,EAAAA,GAAU,CAAAb,SAAA,EACTN,EAAAA,EAAAA,MAACoB,EAAAA,GAAK,CAAAd,SAAA,CAAC,QAELC,EAAAA,EAAAA,KAACc,EAAAA,GAAW,CACVC,KAAK,OACL9B,KAAK,OACL+B,YAAY,yBAEdhB,EAAAA,EAAAA,KAACiB,EAAAA,GAAQ,CAAChC,KAAK,QAAQiC,UAAU,YAEnCzB,EAAAA,EAAAA,MAACoB,EAAAA,GAAK,CAAAd,SAAA,CAAC,SAELC,EAAAA,EAAAA,KAACc,EAAAA,GAAW,CACVC,KAAK,QACL9B,KAAK,QACL+B,YAAY,0BAEdhB,EAAAA,EAAAA,KAACiB,EAAAA,GAAQ,CAAChC,KAAK,QAAQiC,UAAU,YAGnCzB,EAAAA,EAAAA,MAACoB,EAAAA,GAAK,CAAAd,SAAA,CAAC,YAELC,EAAAA,EAAAA,KAACc,EAAAA,GAAW,CACVC,KAAK,WACL9B,KAAK,WACL+B,YAAY,6BAEdhB,EAAAA,EAAAA,KAACiB,EAAAA,GAAQ,CAAChC,KAAK,WAAWiC,UAAU,YAEtClB,EAAAA,EAAAA,KAACmB,EAAAA,EAAM,CAACC,YAAY,OAAOC,KAAK,KAAKC,QAAQ,QAAQP,KAAK,SAAQhB,SAAC,kBAO7E,C,yKC/Eaa,GAAaW,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4EAMzBZ,GAAcS,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAaK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kEAK3Bb,EAAQU,EAAAA,GAAAA,MAAYM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,8BAGpBT,GAAWM,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAoBQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,4C","sources":["components/RegisterView/RegisterView.jsx","components/RegisterView/RegisterView.styled.jsx"],"sourcesContent":["import { Formik } from 'formik';\nimport { Button, Flex, Text } from '@chakra-ui/react';\nimport * as Yup from 'yup';\nimport {\n  StyledForm,\n  Label,\n  ErrorMsg,\n  StyledInput,\n} from './RegisterView.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/AuthThunk';\n\nconst taskSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  email: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  password: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n});\n\nconst RegisterView = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n    dispatch(register(values));\n    actions.resetForm();\n  };\n\n  return (\n    <Flex align=\"center\" justify=\"center\" direction=\"column\" gap=\"40px\">\n      <Text fontSize={32} color={'navy'}>\n        Registration\n      </Text>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        validationSchema={taskSchema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <Label>\n            Name\n            <StyledInput\n              type=\"name\"\n              name=\"name\"\n              placeholder=\"Enter your name... \"\n            />\n            <ErrorMsg name=\"email\" component=\"div\" />\n          </Label>\n          <Label>\n            Email\n            <StyledInput\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter your email... \"\n            />\n            <ErrorMsg name=\"email\" component=\"div\" />\n          </Label>\n\n          <Label>\n            Password\n            <StyledInput\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Enter your password... \"\n            />\n            <ErrorMsg name=\"password\" component=\"div\" />\n          </Label>\n          <Button colorScheme=\"blue\" size=\"sm\" variant=\"solid\" type=\"submit\">\n            Submit\n          </Button>\n        </StyledForm>\n      </Formik>\n    </Flex>\n  );\n};\nexport default RegisterView;\n\n// Object { name: \"Bonny State\", email: \"bonnystate@mail.com\",\n// password: \"bonnystate100314\" }\n","import { Field, Form, ErrorMessage } from 'formik';\nimport { styled } from 'styled-components';\n\nexport const StyledForm = styled(Form)`\n  display: inline-flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const StyledInput = styled(Field)`\n  width: 440px;\n  margin-left: 30px;\n  padding: 5px;\n`;\nexport const Label = styled.label`\n  font-size: 20px;\n`;\nexport const ErrorMsg = styled(ErrorMessage)`\n  font-size: 14px;\n  color: red;\n`;\n"],"names":["taskSchema","Yup","shape","name","min","max","required","email","password","dispatch","useDispatch","_jsxs","Flex","align","justify","direction","gap","children","_jsx","Text","fontSize","color","Formik","initialValues","validationSchema","onSubmit","values","actions","register","resetForm","StyledForm","Label","StyledInput","type","placeholder","ErrorMsg","component","Button","colorScheme","size","variant","styled","Form","_templateObject","_taggedTemplateLiteral","Field","_templateObject2","_templateObject3","ErrorMessage","_templateObject4"],"sourceRoot":""}